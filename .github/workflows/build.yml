name: Build Void Linux packages

on:
  push:
    branches:
      - main
    paths:
      - "packages/**"
  workflow_dispatch:

jobs:
  init:
    name: Initialize package builds
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.find-packages.outputs.packages }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Find all packages
        id: find-packages
        run: |
          find packages/* -maxdepth 1 -type d -o -type l \
            | sed 's|^packages/||' \
            | jq --raw-input \
            | jq --compact-output --slurp '{ "package": . }' \
            > packages.json
          echo "packages=$(cat packages.json)" >> $GITHUB_OUTPUT

  build:
    name: Build all packages
    runs-on: ubuntu-latest
    needs:
      - init
    strategy:
      matrix: ${{ fromJson(needs.init.outputs.packages) }}

    steps:
      - name: Install latest version of xbps
        run: |
          curl -L https://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz -o xbps.tar.xz
          tar -xJvf xbps.tar.xz
          rm xbps.tar.xz
          echo "$(pwd)/usr/bin" >> $GITHUB_PATH

      - name: Checkout void-packages
        uses: actions/checkout@v4
        with:
          path: void-packages
          repository: void-linux/void-packages

      - name: Checkout void-repo
        uses: actions/checkout@v4
        with:
          path: void-repo

      - name: Copy package from my own void repository to void-repository
        run: |
          cat void-repo/packages/shlibs >> void-packages/common/shlibs
          find void-repo/packages/* \( -type d -o -type l \) -exec cp -r {} void-packages/srcpkgs/ \;

      - name: Add my own repo to void-packages repo list
        run: |
          mkdir void-packages/etc/xbps.d/custom
          echo 'repository=https://j0ng4b.github.io/void-repo/current' \
            > void-packages/etc/xbps.d/custom/01-j0ng4b-remote-repo.conf

      - name: Building package ${{ matrix.package }}
        id: build-package
        run: |
          cd void-packages
          yes | ./xbps-src binary-bootstrap x86_64-musl
          ./xbps-src pkg "${{ matrix.package }}"
          printf "pkgfile=%s-%s_%s.%s-musl.xbps\n" \
            "${{ matrix.package }}" \
            "$(./xbps-src show "${{ matrix.package }}" | grep 'version' | sed 's/\t//' | cut -d ':' -f 2)" \
            "$(./xbps-src show "${{ matrix.package }}" | grep 'revision' | sed 's/\t//' | cut -d ':' -f 2)" \
            "$(uname -m)" \
            >> $GITHUB_OUTPUT

      - name: Uploading ${{ matrix.package }} as artifact
        uses: actions/upload-artifact@v3
        with:
          name: void-${{ matrix.package }}
          path: void-packages/hostdir/binpkgs/${{ steps.build-package.outputs.pkgfile }}

  deploy:
    name: Deploy all packages
    runs-on: ubuntu-latest
    needs:
      - init
      - build
    permissions:
      contents: write
    env:
      XBPS_ARCH: x86_64-musl
      XBPS_TARGET_ARCH: x86_64-musl

    steps:
      - name: Checkout deploy branch
        uses: actions/checkout@v4
        with:
          ref: deploy

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Install latest version of xbps
        run: |
          curl -L https://repo-default.voidlinux.org/static/xbps-static-latest.x86_64-musl.tar.xz -o xbps.tar.xz
          tar -xJvf xbps.tar.xz
          rm xbps.tar.xz
          echo "$(pwd)/usr/bin" >> $GITHUB_PATH

      - name: Copy all packages into void directory
        run: |
          mkdir -p current
          cp ./artifacts/*/*.xbps ./current

      - name: Add all packages to the repository
        run: |
          cd current
          for pkg in *.xbps; do
            xbps-rindex --add $pkg
          done

      - name: Remove all packages that are no longer built
        env:
          PACKAGES: ${{ needs.init.outputs.packages }}
        run: |
          mv ./current ./previous
          mkdir ./current
          cp ./previous/${XBPS_ARCH}-repodata ./current/${XBPS_ARCH}-repodata
          for pkg in $(echo "$PACKAGES" | jq --raw-output '.package[]'); do
            pkgver=$(xbps-query --repository="$(pwd)/previous" --show $pkg --property pkgver)
            mv $(pwd)/previous/$pkgver.$XBPS_ARCH.xbps $(pwd)/current
          done

      - name: Sign all packages in the repository
        run: |
          echo "${{ secrets.VOID_REPO_SIGNING_KEY }}" > private.pem
          xbps-rindex \
            --privkey private.pem \
            --sign \
            --signedby "Jonatha Gabriel <jonathagabrielns@gmail.com>" \
            "$(pwd)/current"
          for pkg in ./current/*.xbps; do
            xbps-rindex --privkey private.pem --sign-pkg $pkg
          done

      - name: Clean up repositories
        run: |
          xbps-rindex --clean "$(pwd)/current"
          xbps-rindex --remove-obsoletes "$(pwd)/current"

      - name: Push updated repository to remote
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Upload Void Linux packages
          file_pattern: "current/*"
          push_options: "--force"

